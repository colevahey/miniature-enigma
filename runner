#!/usr/bin/env python3

import json
import sys
import skilstak.colors as c
from os import system

with open('letters.json', 'r') as pfile:
    j=json.load(pfile)
    inverse = {y:x for x,y in j.items()}

def run():
    message = input(c.red + "What is your message? >> " + c.orange)
    if message.startswith("#"):
        print(decoder(message))
    else:
        print(encoder(message))

def encoder(message):
    n = 0
    final = "#"
    while n < len(message):
        letter = message[n]
        final += j[letter]
        n += 1
    return final

def decoder(message):
    final = ""
    n=1
    if message.startswith("#"):
        while n < len(message):
            letter = message[n]
            final += inverse[letter]
            n += 1
        return final
    else:
        print(c.x + "That is not an encoded message. Try the -e function")
        exit()

def helper():
    print(c.clear + c.x + "Usage:\nMiniature-enigma has an encoder and decoder function. If you do not wish to specify the encoder or decoder you may run miniature-enigma without a specified function.\n\n   -d:\n       This is the decoder function.\n\n   -e:\n       This is the encoder function.\n\n   -h:\n       Shows the usage for miniature-enigma")

def args():
    if len(sys.argv) == 1:
        run()
    elif len(sys.argv) == 2:
        if sys.argv[1].startswith("-"):
            if sys.argv[1] == '-h':
                helper()
            elif sys.argv[1] == '-e':
                print(encoder(input(c.red + "What is your message? >> " + c.orange)))
            elif sys.argv[1] == '-d':
                print(decoder(input(c.red + "What is your message? >> " + c.orange)))
            else:
                print("To view usage type `runner -h`")
        else:
            print("To view usage type `runner -h`")
    else:
        print("To view usage type `runner -h`")
    
if __name__=='__main__':
    try:
        args()
    except KeyboardInterrupt:
        print("")
        exit()
    except EOFError:
        print("")
        exit()
